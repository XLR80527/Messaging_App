<!-- 
    Login page, user is redirected here when the user clicks on Login.
-->

{% extends 'base.jinja' %}

{% block content %} 
    <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh;">
        <h1>Login</h1>
        <p>Username</p>
        <input id="username"/>
        <p>Password</p>
        <input id="password"  type="password"/>
        <button onclick="login()" style="margin-top: 10px;">Login</button>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>

        <script>

            // basically checks if the server returns an Error message instead of a URL
            // this is a pretty terrible way of handling error generated by the server, but it works...
            function isValidURL(string) {
                if (string.length == 0) {
                    return false;
                }
                if (string[0] == "/") {
                    return true;
                }
                return false;
            }

            function hashPassword(password, salt) {
                var hashedPassword = CryptoJS.SHA256(password + salt);
                return hashedPassword.toString(CryptoJS.enc.Hex);
            }


            function get_js_salt(user) {
                return new Promise((resolve, reject) => {
                    fetch('/get_js_salt?user=' + user)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.text();
                        })
                        .then(data => {
                            var js_salt = data;
                            resolve(js_salt)
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            reject(error);
                        });
                });
            }

            async function login() {
                let loginURL = "{{ url_for('login_user') }}";
                var username = document.getElementById("username").value;
                var password = document.getElementById("password").value;
                var salt = ""

                try {
                    salt = await get_js_salt(username);
                    var hashedPassword = hashPassword(password, salt)
                    let res = await axios.post(loginURL, {
                        username: username,
                        password: hashedPassword
                    });

                    if (!isValidURL(res.data)) {
                        alert(res.data);
                        return;
                    }

                    window.open(res.data, "_self")
                } catch (error) {
                    console.error(error);
                }

            }
        </script>
    </div>
{% endblock %}